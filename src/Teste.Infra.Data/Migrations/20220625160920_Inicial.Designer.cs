// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teste.Infra.Data.Contexts;

#nullable disable

namespace Teste.Infra.Data.Migrations
{
    [DbContext(typeof(TesteContexto))]
    [Migration("20220625160920_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Teste.Domain.Alunos.Entities.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FOTO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("PERIODO");

                    b.Property<string>("RA")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("REGISTRO_ACADEMICO");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("TB_ALUNO", (string)null);
                });

            modelBuilder.Entity("Teste.Domain.Cursos.Entitites.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("TB_CURSO", (string)null);
                });

            modelBuilder.Entity("Teste.Domain.Disciplinas.Entities.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CURSO_ID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME");

                    b.Property<decimal>("NotaMinimaAprovacao")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("NOTA_MINIMA_APROVACAO");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("TB_DISCIPLINA", (string)null);
                });

            modelBuilder.Entity("Teste.Domain.Alunos.Entities.Aluno", b =>
                {
                    b.HasOne("Teste.Domain.Cursos.Entitites.Curso", "Curso")
                        .WithMany("Alunos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ALUNO_CURSO");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Teste.Domain.Disciplinas.Entities.Disciplina", b =>
                {
                    b.HasOne("Teste.Domain.Cursos.Entitites.Curso", "Curso")
                        .WithMany("Disciplinas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CURSO_DISCIPLINA");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Teste.Domain.Cursos.Entitites.Curso", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Disciplinas");
                });
#pragma warning restore 612, 618
        }
    }
}
